name: Deploy Backend Service to ECR
on: push

jobs:
  build-backend:
    name: Build Image for backend
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
      - name: set NOW env variable
        run: echo "NOW=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build the app image
        uses: docker/build-push-action@v6
        with:
          push: true
          context: ./backend
          file: ./backend/Dockerfile
          platforms: linux/amd64
          tags: ${{ steps.login-ecr.outputs.registry }}/routeme:proj2_backend_${{env.NOW}}
          secrets: |
            "mongo_username=${{ secrets.MONGO_USERNAME }}"
            "mongo_password=${{ secrets.MONGO_PASSWORD }}"
            "g_app_cred=${{secrets.GOOGLE_APPLICATION_CREDENTIALS}}"
            "g_maps_api_key=${{secrets.GOOGLE_MAPS_API_KEY}}"
            "g_svc_acc_key=${{secrets.GOOGLE_SVC_KEY}}"

  upload-frontend:
    name: upload frontend files to routeme s3 bucket
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: jakejarvis/s3-sync-action@master
        with:
          args: --acl public-read --follow-symlinks --delete --exclude '.git*/*'
        env:
          AWS_S3_BUCKET: "www.benyellow.com"
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          SOURCE_DIR: "frontend"

  deploy-lambda-post-customer:
    name: deploy post customer function
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install zip tool
        uses: montudor/action-zip@v1
      - name: Create Zip file for Lambda function
        run: zip -r code.zip postCustomerFunction/*
      - name: AWS CLI v2
        uses: imehedi/actions-awscli-v2@latest
        with:
          args: "lambda update-function-code \
            --function-name arn:aws:lambda:us-east-1:471112517107:function:postCustomerFunction \
            --zip-file fileb://code.zip"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "us-east-1"
